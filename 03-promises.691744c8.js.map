{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,WAGA,IAAMC,EAAOC,SAASC,cAAc,SAE9BC,EAAY,GACZC,EAAU,CAAEC,QAAS,KAuB3B,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAY,CAAEF,WAAUC,SAC9B,IAAIE,SAAQ,SAACC,EAASC,GACpBC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQF,GAERG,EAAOH,E,GAERD,E,IAEFQ,MAAK,SAAAC,G,IAAGC,EAAQD,EAARV,SAAUY,EAAKF,EAALT,MACjBY,EAAAtB,GAASuB,OAAOC,QACd,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,MAC5Cf,EAEJ,IACCoB,OAEF,SAAMP,G,IAAGC,EAAQD,EAARV,SAAUY,EAAKF,EAALT,MAClBY,EAAAtB,GAASuB,OAAOC,QACd,sBAAuCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,MAC3Cf,EAEJ,G,CA9CNJ,EAAKyB,iBAAiB,UAAU,SAAAC,GAehC,IAAyBC,EAXvB,GAHAD,EAAME,iBAciBD,EAbPD,EAaSC,cACzBxB,EAAUK,MAAQqB,OAAOF,EAAcG,SAAStB,MAAMuB,OACtD5B,EAAU6B,KAAOH,OAAOF,EAAcG,SAASE,KAAKD,OACpD5B,EAAU8B,OAASJ,OAAOF,EAAcG,SAASG,OAAOF,OAdpD5B,EAAU8B,QAAU,EAEtB,IADA,IAAIC,EAAQ/B,EAAUK,MACb2B,EAAI,EAAGA,GAAKhC,EAAU8B,OAAQE,IACrC7B,EAAc6B,EAAGD,GACjBA,GAAS/B,EAAU6B,KAIvBN,EAAMC,cAAcS,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.js';\n\nconst form = document.querySelector('.form');\n\nconst inputData = {};\nconst options = { timeout: 1000 };\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  createInputData(event);\n\n  if (inputData.amount >= 1) {\n    let timer = inputData.delay;\n    for (let i = 1; i <= inputData.amount; i++) {\n      createPromise(i, timer);\n      timer += inputData.step;\n    }\n  }\n\n  event.currentTarget.reset();\n});\n\nfunction createInputData({ currentTarget }) {\n  inputData.delay = Number(currentTarget.elements.delay.value);\n  inputData.step = Number(currentTarget.elements.step.value);\n  inputData.amount = Number(currentTarget.elements.amount.value);\n}\n\nfunction createPromise(position, delay) {\n  const objForLog = { position, delay };\n  new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(objForLog);\n      } else {\n        reject(objForLog);\n      }\n    }, delay);\n  })\n    .then(({ position, delay }) => {\n      Notiflix.Notify.failure(\n        `✅ Fulfilled promise ${position} in ${delay}ms`,\n        options\n      );\n      /* console.log(`✅ Fulfilled promise ${position} in ${delay}ms`); */\n    })\n\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(\n        `❌ Rejected promise ${position} in ${delay}ms`,\n        options\n      );\n      /* console.log(`❌ Rejected promise ${position} in ${delay}ms`); */\n    });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$inputData","$ce04d3a99e08e73b$var$options","timeout","$ce04d3a99e08e73b$var$createPromise","position","delay","objForLog","Promise","resolve","reject","setTimeout","Math","random","then","param","_$position","_$delay","$parcel$interopDefault","Notify","failure","concat","catch","addEventListener","event","currentTarget","preventDefault","Number","elements","value","step","amount","timer","i","reset"],"version":3,"file":"03-promises.691744c8.js.map"}