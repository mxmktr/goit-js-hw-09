{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,WAGA,MAAMC,EAAOC,SAASC,cAAc,SAE9BC,EAAY,GACZC,EAAU,CAAEC,QAAS,KAuB3B,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAY,CAAEC,SAAAH,EAAUI,MAAAH,GAC9B,IAAII,SAAQ,CAACC,EAASC,KACpBC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQJ,GAERK,EAAOL,EAAU,GAElBD,EAAM,IAERU,MAAK,EAACR,SAAEA,EAAQC,MAAEA,MACjBQ,EAAArB,GAASsB,OAAOC,QACd,uBAAqBX,QAAiBC,MAAWP,EAC/C,IAILkB,OAAM,EAACZ,SAAEA,EAAQC,MAAEA,MAClBQ,EAAArB,GAASsB,OAAOC,QACd,sBAAoBX,QAAeC,MAAWP,EAC9C,G,CA3CRJ,EAAKuB,iBAAiB,UAAUC,IAI9B,GAHAA,EAAMC,iBAcR,UAAyBC,cAAEA,IACzBvB,EAAUQ,MAAQgB,OAAOD,EAAcE,SAASjB,MAAMkB,OACtD1B,EAAU2B,KAAOH,OAAOD,EAAcE,SAASE,KAAKD,OACpD1B,EAAU4B,OAASJ,OAAOD,EAAcE,SAASG,OAAOF,M,CAhBxDG,CAAgBR,GAEZrB,EAAU4B,QAAU,EAAG,CACzB,IAAIE,EAAQ9B,EAAUQ,MACtB,IAAK,IAAIuB,EAAI,EAAGA,GAAK/B,EAAU4B,OAAQG,IACrC5B,EAAc4B,EAAGD,GACjBA,GAAS9B,EAAU2B,I,CAIvBN,EAAME,cAAcS,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.js';\n\nconst form = document.querySelector('.form');\n\nconst inputData = {};\nconst options = { timeout: 1000 };\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  createInputData(event);\n\n  if (inputData.amount >= 1) {\n    let timer = inputData.delay;\n    for (let i = 1; i <= inputData.amount; i++) {\n      createPromise(i, timer);\n      timer += inputData.step;\n    }\n  }\n\n  event.currentTarget.reset();\n});\n\nfunction createInputData({ currentTarget }) {\n  inputData.delay = Number(currentTarget.elements.delay.value);\n  inputData.step = Number(currentTarget.elements.step.value);\n  inputData.amount = Number(currentTarget.elements.amount.value);\n}\n\nfunction createPromise(position, delay) {\n  const objForLog = { position, delay };\n  new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(objForLog);\n      } else {\n        reject(objForLog);\n      }\n    }, delay);\n  })\n    .then(({ position, delay }) => {\n      Notiflix.Notify.failure(\n        `✅ Fulfilled promise ${position} in ${delay}ms`,\n        options\n      );\n    })\n\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(\n        `❌ Rejected promise ${position} in ${delay}ms`,\n        options\n      );\n    });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$inputData","$47d4ff9957288465$var$options","timeout","$47d4ff9957288465$var$createPromise","position1","delay1","objForLog","position","delay","Promise","resolve","reject","setTimeout","Math","random","then","$parcel$interopDefault","Notify","failure","catch","addEventListener","event","preventDefault","currentTarget","Number","elements","value","step","amount","$47d4ff9957288465$var$createInputData","timer","i","reset"],"version":3,"file":"03-promises.80149d24.js.map"}